<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAEAAAAAwAAAAAAAAAAAAAAAAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAYAAAAtAAAAUAAA
        AD0AAAAAAAAAAAAAAAUAAABHAAAAVQAAAFIAAABSAAAAUgAAAFIAAABSAAAAUwAAAEwAAAAuAAAABgAA
        AAAAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAcAAAByAAAA3AAA
        AP8AAAD+AAAA/wAAADIAAAAAAAAAWAAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAADcAAAAcgAAAAcAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVAAAAxQAA
        AP8AAAD/AAAA2wAAALMAAACPAAAADQAAAAAAAAAfAAAAnwAAAKcAAAClAAAApgAAAKYAAACmAAAApgAA
        AKYAAACvAAAA3QAAAP8AAAD/AAAAxQAAABUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAgAA
        AL4AAAD/AAAA2gAAAEkAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAASQAAANoAAAD/AAAAvQAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAwAA
        AAAAAABpAAAA/wAAAN0AAAAdAAAAAAAAAAIAAAADAAAABAAAAAEAAAAAAAAAAQAAAAQAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAIAAAAAAAAAHQAAAN0AAAD/AAAAaQAAAAAAAAADAAAAAAAA
        AAEAAAAAAAAAAAAAAMwAAAD/AAAAVwAAAAAAAAAHAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAcAAAAAAAAAVwAAAP8AAADMAAAAAAAA
        AAAAAAABAAAAAgAAAAAAAAAlAAAA/wAAAOUAAAAMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAMAAAA5QAA
        AP8AAAAlAAAAAAAAAAIAAAADAAAAAAAAAEQAAAD/AAAAuQAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAAC5AAAA/wAAAEQAAAAAAAAAAwAAAAQAAAAAAAAAUQAAAP8AAACoAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAADAAAABAAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAEAAAAAgAA
        AAAAAAADAAAAAAAAAKgAAAD/AAAAUQAAAAAAAAAEAAAABAAAAAAAAABSAAAA/wAAAKYAAAAAAAAAAwAA
        AAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAApgAAAP8AAABTAAAAAAAAAAQAAAAEAAAAAAAAAFIAAAD/AAAApgAA
        AAAAAAADAAAAAAAAAAEAAAAAAAAANwAAAHEAAABhAAAAFgAAAAAAAAADAAAAAgAAAAAAAABZAAAARQAA
        AAAAAAAJAAAAagAAACkAAAAAAAAABQAAAAAAAACmAAAA/wAAAFMAAAAAAAAABAAAAAQAAAAAAAAAUgAA
        AP8AAACmAAAAAAAAAAQAAAABAAAAAAAAAI4AAAD/AAAA/QAAAP8AAADrAAAAOAAAAAAAAAAAAAAAGQAA
        AP4AAADdAAAAAAAAAEYAAAD/AAAAogAAAAAAAAAHAAAAAAAAAKYAAAD/AAAAUwAAAAAAAAAEAAAABAAA
        AAAAAABSAAAA/wAAAKYAAAAAAAAABwAAAAAAAABTAAAA/wAAAPAAAACNAAAAtQAAAP8AAADTAAAAFAAA
        AAgAAAAvAAAA/gAAAOIAAAAGAAAAWAAAAP8AAACoAAAAAAAAAAYAAAAAAAAApgAAAP8AAABTAAAAAAAA
        AAQAAAAEAAAAAAAAAFIAAAD/AAAApgAAAAAAAAAHAAAAAAAAAJ4AAAD/AAAAbAAAAAAAAAAFAAAA0AAA
        AP8AAADyAAAA8QAAAPQAAAD/AAAA/gAAAPIAAADzAAAA/wAAAK0AAAAAAAAABwAAAAAAAACmAAAA/wAA
        AFMAAAAAAAAABAAAAAQAAAAAAAAAUgAAAP8AAACmAAAAAAAAAAcAAAAAAAAAngAAAP8AAABoAAAAAAAA
        AAYAAADQAAAA/wAAAPIAAADyAAAA8gAAAO4AAADuAAAA8gAAAO4AAAD6AAAAdgAAAAAAAAAHAAAAAAAA
        AKYAAAD/AAAAUwAAAAAAAAAEAAAABAAAAAAAAABSAAAA/wAAAKYAAAAAAAAABgAAAAAAAABLAAAA/QAA
        AGAAAABXAAAAvwAAAP8AAADTAAAAEwAAAA8AAAARAAAAEQAAABEAAAAQAAAAEQAAABAAAAABAAAAAAAA
        AAMAAAAAAAAApgAAAP8AAABTAAAAAAAAAAQAAAAEAAAAAAAAAFIAAAD/AAAApgAAAAAAAAADAAAAAAAA
        AAMAAAACAAAALwAAAP8AAAD/AAAA6wAAADkAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAwAAAAAAAACmAAAA/wAAAFMAAAAAAAAABAAAAAQAAAAAAAAAUgAAAP8AAACmAAAAAAAA
        AAMAAAAAAAAAAgAAAAAAAAADAAAAXAAAAGUAAAAVAAAAAAAAAAIAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAADAAAAAAAAAKYAAAD/AAAAUwAAAAAAAAAEAAAABAAAAAAAAABSAAAA/wAA
        AKYAAAAAAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAApgAAAP8AAABSAAAAAAAAAAQAAAAEAAAAAAAA
        AFEAAAD/AAAAqAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACoAAAA/wAAAFEAAAAAAAAABAAA
        AAMAAAAAAAAARAAAAP8AAAC5AAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAALkAAAD/AAAARAAA
        AAAAAAADAAAAAgAAAAAAAAAlAAAA/wAAAOQAAAAMAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAMAAAA5AAA
        AP8AAAAlAAAAAAAAAAIAAAABAAAAAAAAAAAAAADMAAAA/wAAAFcAAAAAAAAABwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAHAAAAAAAA
        AFcAAAD/AAAAzAAAAAAAAAAAAAAAAQAAAAAAAAADAAAAAAAAAGkAAAD/AAAA3QAAAB0AAAAAAAAAAgAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAgAA
        AAAAAAAdAAAA3QAAAP8AAABpAAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAgAAAL4AAAD/AAAA2gAA
        AEkAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAASQAAANoAAAD/AAAAvgAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFQAA
        AMYAAAD/AAAA/wAAANwAAACvAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAAAKYAAACmAAAApgAA
        AKYAAACmAAAArwAAANwAAAD/AAAA/wAAAMYAAAAVAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAABwAAAHIAAADcAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAN0AAABzAAAABwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAYAAAAuAAAATAAAAFMAAABSAAAAUgAAAFIAAABSAAAAUgAA
        AFIAAABSAAAAUgAAAFIAAABSAAAAUwAAAEwAAAAuAAAABgAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+ggAX+iJ/RfSGABLoAgABZAIAAkgX/oEIQgAhGIcAEZCf/5CRP//IkSC
        yKJFKQAiREJIokSBiKJFAACiRRAAokUQAKJFAACiRQE8IkVCACJEGX8iREL/IkT//yJCf/5CYgAARiEA
        AIQgX/oEkAAACaAAAAXSAABL6L/9F/oAAF8=
</value>
  </data>
</root>